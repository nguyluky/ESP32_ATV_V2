/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: remotemessage.proto */

#ifndef PROTOBUF_C_remotemessage_2eproto__INCLUDED
#define PROTOBUF_C_remotemessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Remote__RemoteAppLinkLaunchRequest Remote__RemoteAppLinkLaunchRequest;
typedef struct Remote__RemoteResetPreferredAudioDevice Remote__RemoteResetPreferredAudioDevice;
typedef struct Remote__RemoteSetPreferredAudioDevice Remote__RemoteSetPreferredAudioDevice;
typedef struct Remote__RemoteAdjustVolumeLevel Remote__RemoteAdjustVolumeLevel;
typedef struct Remote__RemoteSetVolumeLevel Remote__RemoteSetVolumeLevel;
typedef struct Remote__RemoteStart Remote__RemoteStart;
typedef struct Remote__RemoteVoiceEnd Remote__RemoteVoiceEnd;
typedef struct Remote__RemoteVoicePayload Remote__RemoteVoicePayload;
typedef struct Remote__RemoteVoiceBegin Remote__RemoteVoiceBegin;
typedef struct Remote__RemoteTextFieldStatus Remote__RemoteTextFieldStatus;
typedef struct Remote__RemoteImeShowRequest Remote__RemoteImeShowRequest;
typedef struct Remote__RemoteEditInfo Remote__RemoteEditInfo;
typedef struct Remote__RemoteImeBatchEdit Remote__RemoteImeBatchEdit;
typedef struct Remote__RemoteAppInfo Remote__RemoteAppInfo;
typedef struct Remote__RemoteImeKeyInject Remote__RemoteImeKeyInject;
typedef struct Remote__RemoteKeyInject Remote__RemoteKeyInject;
typedef struct Remote__RemotePingResponse Remote__RemotePingResponse;
typedef struct Remote__RemotePingRequest Remote__RemotePingRequest;
typedef struct Remote__RemoteSetActive Remote__RemoteSetActive;
typedef struct Remote__RemoteDeviceInfo Remote__RemoteDeviceInfo;
typedef struct Remote__RemoteConfigure Remote__RemoteConfigure;
typedef struct Remote__RemoteError Remote__RemoteError;
typedef struct Remote__RemoteMessage Remote__RemoteMessage;


/* --- enums --- */

typedef enum _Remote__RemoteKeyCode {
  REMOTE__REMOTE_KEY_CODE__KEYCODE_UNKNOWN = 0,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SOFT_LEFT = 1,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SOFT_RIGHT = 2,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_HOME = 3,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BACK = 4,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CALL = 5,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ENDCALL = 6,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_0 = 7,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_1 = 8,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_2 = 9,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_3 = 10,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_4 = 11,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_5 = 12,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_6 = 13,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_7 = 14,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_8 = 15,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_9 = 16,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_STAR = 17,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_POUND = 18,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DPAD_UP = 19,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DPAD_DOWN = 20,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DPAD_LEFT = 21,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DPAD_RIGHT = 22,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DPAD_CENTER = 23,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VOLUME_UP = 24,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VOLUME_DOWN = 25,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_POWER = 26,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CAMERA = 27,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CLEAR = 28,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_A = 29,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_B = 30,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_C = 31,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_D = 32,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_E = 33,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F = 34,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_G = 35,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_H = 36,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_I = 37,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_J = 38,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_K = 39,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_L = 40,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_M = 41,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_N = 42,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_O = 43,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_P = 44,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_Q = 45,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_R = 46,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_S = 47,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_T = 48,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_U = 49,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_V = 50,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_W = 51,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_X = 52,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_Y = 53,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_Z = 54,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_COMMA = 55,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PERIOD = 56,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ALT_LEFT = 57,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ALT_RIGHT = 58,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SHIFT_LEFT = 59,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SHIFT_RIGHT = 60,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TAB = 61,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SPACE = 62,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SYM = 63,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_EXPLORER = 64,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ENVELOPE = 65,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ENTER = 66,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DEL = 67,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_GRAVE = 68,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MINUS = 69,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_EQUALS = 70,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_LEFT_BRACKET = 71,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_RIGHT_BRACKET = 72,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BACKSLASH = 73,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SEMICOLON = 74,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_APOSTROPHE = 75,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SLASH = 76,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_AT = 77,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUM = 78,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_HEADSETHOOK = 79,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_FOCUS = 80,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PLUS = 81,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MENU = 82,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NOTIFICATION = 83,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SEARCH = 84,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_PLAY_PAUSE = 85,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_STOP = 86,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_NEXT = 87,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_PREVIOUS = 88,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_REWIND = 89,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_FAST_FORWARD = 90,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MUTE = 91,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PAGE_UP = 92,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PAGE_DOWN = 93,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PICTSYMBOLS = 94,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SWITCH_CHARSET = 95,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_A = 96,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_B = 97,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_C = 98,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_X = 99,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_Y = 100,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_Z = 101,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_L1 = 102,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_R1 = 103,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_L2 = 104,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_R2 = 105,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_THUMBL = 106,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_THUMBR = 107,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_START = 108,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_SELECT = 109,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_MODE = 110,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ESCAPE = 111,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_FORWARD_DEL = 112,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CTRL_LEFT = 113,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CTRL_RIGHT = 114,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CAPS_LOCK = 115,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SCROLL_LOCK = 116,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_META_LEFT = 117,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_META_RIGHT = 118,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_FUNCTION = 119,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SYSRQ = 120,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BREAK = 121,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MOVE_HOME = 122,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MOVE_END = 123,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_INSERT = 124,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_FORWARD = 125,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_PLAY = 126,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_PAUSE = 127,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_CLOSE = 128,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_EJECT = 129,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_RECORD = 130,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F1 = 131,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F2 = 132,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F3 = 133,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F4 = 134,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F5 = 135,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F6 = 136,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F7 = 137,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F8 = 138,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F9 = 139,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F10 = 140,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F11 = 141,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_F12 = 142,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUM_LOCK = 143,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_0 = 144,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_1 = 145,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_2 = 146,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_3 = 147,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_4 = 148,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_5 = 149,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_6 = 150,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_7 = 151,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_8 = 152,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_9 = 153,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_DIVIDE = 154,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_MULTIPLY = 155,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_SUBTRACT = 156,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_ADD = 157,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_DOT = 158,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_COMMA = 159,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_ENTER = 160,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_EQUALS = 161,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_LEFT_PAREN = 162,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NUMPAD_RIGHT_PAREN = 163,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VOLUME_MUTE = 164,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_INFO = 165,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CHANNEL_UP = 166,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CHANNEL_DOWN = 167,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ZOOM_IN = 168,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ZOOM_OUT = 169,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV = 170,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_WINDOW = 171,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_GUIDE = 172,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DVR = 173,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BOOKMARK = 174,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CAPTIONS = 175,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SETTINGS = 176,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_POWER = 177,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT = 178,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_STB_POWER = 179,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_STB_INPUT = 180,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_AVR_POWER = 181,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_AVR_INPUT = 182,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PROG_RED = 183,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PROG_GREEN = 184,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PROG_YELLOW = 185,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PROG_BLUE = 186,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_APP_SWITCH = 187,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_1 = 188,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_2 = 189,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_3 = 190,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_4 = 191,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_5 = 192,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_6 = 193,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_7 = 194,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_8 = 195,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_9 = 196,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_10 = 197,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_11 = 198,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_12 = 199,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_13 = 200,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_14 = 201,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_15 = 202,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BUTTON_16 = 203,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_LANGUAGE_SWITCH = 204,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MANNER_MODE = 205,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_3D_MODE = 206,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CONTACTS = 207,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CALENDAR = 208,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MUSIC = 209,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CALCULATOR = 210,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ZENKAKU_HANKAKU = 211,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_EISU = 212,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MUHENKAN = 213,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_HENKAN = 214,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_KATAKANA_HIRAGANA = 215,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_YEN = 216,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_RO = 217,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_KANA = 218,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ASSIST = 219,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BRIGHTNESS_DOWN = 220,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_BRIGHTNESS_UP = 221,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_AUDIO_TRACK = 222,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SLEEP = 223,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_WAKEUP = 224,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PAIRING = 225,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_TOP_MENU = 226,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_11 = 227,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_12 = 228,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_LAST_CHANNEL = 229,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_DATA_SERVICE = 230,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VOICE_ASSIST = 231,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_RADIO_SERVICE = 232,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_TELETEXT = 233,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_NUMBER_ENTRY = 234,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_TERRESTRIAL_ANALOG = 235,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_TERRESTRIAL_DIGITAL = 236,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_SATELLITE = 237,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_SATELLITE_BS = 238,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_SATELLITE_CS = 239,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_SATELLITE_SERVICE = 240,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_NETWORK = 241,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_ANTENNA_CABLE = 242,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT_HDMI_1 = 243,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT_HDMI_2 = 244,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT_HDMI_3 = 245,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT_HDMI_4 = 246,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT_COMPOSITE_1 = 247,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT_COMPOSITE_2 = 248,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT_COMPONENT_1 = 249,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT_COMPONENT_2 = 250,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_INPUT_VGA_1 = 251,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_AUDIO_DESCRIPTION = 252,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_AUDIO_DESCRIPTION_MIX_UP = 253,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_AUDIO_DESCRIPTION_MIX_DOWN = 254,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_ZOOM_MODE = 255,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_CONTENTS_MENU = 256,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_MEDIA_CONTEXT_MENU = 257,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_TV_TIMER_PROGRAMMING = 258,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_HELP = 259,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NAVIGATE_PREVIOUS = 260,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NAVIGATE_NEXT = 261,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NAVIGATE_IN = 262,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_NAVIGATE_OUT = 263,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_STEM_PRIMARY = 264,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_STEM_1 = 265,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_STEM_2 = 266,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_STEM_3 = 267,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DPAD_UP_LEFT = 268,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DPAD_DOWN_LEFT = 269,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DPAD_UP_RIGHT = 270,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DPAD_DOWN_RIGHT = 271,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_SKIP_FORWARD = 272,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_SKIP_BACKWARD = 273,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_STEP_FORWARD = 274,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_MEDIA_STEP_BACKWARD = 275,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SOFT_SLEEP = 276,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_CUT = 277,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_COPY = 278,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PASTE = 279,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SYSTEM_NAVIGATION_UP = 280,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SYSTEM_NAVIGATION_DOWN = 281,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SYSTEM_NAVIGATION_LEFT = 282,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_SYSTEM_NAVIGATION_RIGHT = 283,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_ALL_APPS = 284,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_REFRESH = 285,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_THUMBS_UP = 286,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_THUMBS_DOWN = 287,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_PROFILE_SWITCH = 288,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VIDEO_APP_1 = 289,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VIDEO_APP_2 = 290,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VIDEO_APP_3 = 291,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VIDEO_APP_4 = 292,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VIDEO_APP_5 = 293,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VIDEO_APP_6 = 294,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VIDEO_APP_7 = 295,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_VIDEO_APP_8 = 296,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_FEATURED_APP_1 = 297,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_FEATURED_APP_2 = 298,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_FEATURED_APP_3 = 299,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_FEATURED_APP_4 = 300,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DEMO_APP_1 = 301,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DEMO_APP_2 = 302,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DEMO_APP_3 = 303,
  REMOTE__REMOTE_KEY_CODE__KEYCODE_DEMO_APP_4 = 304
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(REMOTE__REMOTE_KEY_CODE)
} Remote__RemoteKeyCode;
typedef enum _Remote__RemoteDirection {
  REMOTE__REMOTE_DIRECTION__UNKNOWN_DIRECTION = 0,
  REMOTE__REMOTE_DIRECTION__START_LONG = 1,
  REMOTE__REMOTE_DIRECTION__END_LONG = 2,
  REMOTE__REMOTE_DIRECTION__SHORT = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(REMOTE__REMOTE_DIRECTION)
} Remote__RemoteDirection;

/* --- messages --- */

struct  Remote__RemoteAppLinkLaunchRequest
{
  ProtobufCMessage base;
  char *app_link;
};
#define REMOTE__REMOTE_APP_LINK_LAUNCH_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_app_link_launch_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Remote__RemoteResetPreferredAudioDevice
{
  ProtobufCMessage base;
};
#define REMOTE__REMOTE_RESET_PREFERRED_AUDIO_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_reset_preferred_audio_device__descriptor) \
     }


struct  Remote__RemoteSetPreferredAudioDevice
{
  ProtobufCMessage base;
};
#define REMOTE__REMOTE_SET_PREFERRED_AUDIO_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_set_preferred_audio_device__descriptor) \
     }


struct  Remote__RemoteAdjustVolumeLevel
{
  ProtobufCMessage base;
};
#define REMOTE__REMOTE_ADJUST_VOLUME_LEVEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_adjust_volume_level__descriptor) \
     }


struct  Remote__RemoteSetVolumeLevel
{
  ProtobufCMessage base;
  uint32_t unknown1;
  uint32_t unknown2;
  char *player_model;
  uint32_t unknown4;
  uint32_t unknown5;
  uint32_t volume_max;
  uint32_t volume_level;
  protobuf_c_boolean volume_muted;
};
#define REMOTE__REMOTE_SET_VOLUME_LEVEL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_set_volume_level__descriptor) \
    , 0, 0, (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0 }


struct  Remote__RemoteStart
{
  ProtobufCMessage base;
  protobuf_c_boolean started;
};
#define REMOTE__REMOTE_START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_start__descriptor) \
    , 0 }


struct  Remote__RemoteVoiceEnd
{
  ProtobufCMessage base;
};
#define REMOTE__REMOTE_VOICE_END__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_voice_end__descriptor) \
     }


struct  Remote__RemoteVoicePayload
{
  ProtobufCMessage base;
};
#define REMOTE__REMOTE_VOICE_PAYLOAD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_voice_payload__descriptor) \
     }


struct  Remote__RemoteVoiceBegin
{
  ProtobufCMessage base;
};
#define REMOTE__REMOTE_VOICE_BEGIN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_voice_begin__descriptor) \
     }


struct  Remote__RemoteTextFieldStatus
{
  ProtobufCMessage base;
  int32_t counter_field;
  char *value;
  int32_t start;
  int32_t end;
  int32_t int5;
  char *label;
};
#define REMOTE__REMOTE_TEXT_FIELD_STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_text_field_status__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0, 0, 0, (char *)protobuf_c_empty_string }


struct  Remote__RemoteImeShowRequest
{
  ProtobufCMessage base;
  Remote__RemoteTextFieldStatus *remote_text_field_status;
};
#define REMOTE__REMOTE_IME_SHOW_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_ime_show_request__descriptor) \
    , NULL }


struct  Remote__RemoteEditInfo
{
  ProtobufCMessage base;
  int32_t insert;
};
#define REMOTE__REMOTE_EDIT_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_edit_info__descriptor) \
    , 0 }


struct  Remote__RemoteImeBatchEdit
{
  ProtobufCMessage base;
  int32_t ime_counter;
  int32_t field_counter;
  Remote__RemoteEditInfo *edit_info;
};
#define REMOTE__REMOTE_IME_BATCH_EDIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_ime_batch_edit__descriptor) \
    , 0, 0, NULL }


struct  Remote__RemoteAppInfo
{
  ProtobufCMessage base;
  int32_t counter;
  int32_t int2;
  int32_t int3;
  char *int4;
  int32_t int7;
  int32_t int8;
  char *label;
  char *app_package;
  int32_t int13;
};
#define REMOTE__REMOTE_APP_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_app_info__descriptor) \
    , 0, 0, 0, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  Remote__RemoteImeKeyInject
{
  ProtobufCMessage base;
  Remote__RemoteAppInfo *app_info;
  Remote__RemoteTextFieldStatus *text_field_status;
};
#define REMOTE__REMOTE_IME_KEY_INJECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_ime_key_inject__descriptor) \
    , NULL, NULL }


struct  Remote__RemoteKeyInject
{
  ProtobufCMessage base;
  Remote__RemoteKeyCode key_code;
  Remote__RemoteDirection direction;
};
#define REMOTE__REMOTE_KEY_INJECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_key_inject__descriptor) \
    , REMOTE__REMOTE_KEY_CODE__KEYCODE_UNKNOWN, REMOTE__REMOTE_DIRECTION__UNKNOWN_DIRECTION }


struct  Remote__RemotePingResponse
{
  ProtobufCMessage base;
  int32_t val1;
};
#define REMOTE__REMOTE_PING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_ping_response__descriptor) \
    , 0 }


struct  Remote__RemotePingRequest
{
  ProtobufCMessage base;
  int32_t val1;
  int32_t val2;
};
#define REMOTE__REMOTE_PING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_ping_request__descriptor) \
    , 0, 0 }


struct  Remote__RemoteSetActive
{
  ProtobufCMessage base;
  int32_t active;
};
#define REMOTE__REMOTE_SET_ACTIVE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_set_active__descriptor) \
    , 0 }


struct  Remote__RemoteDeviceInfo
{
  ProtobufCMessage base;
  char *model;
  char *vendor;
  int32_t unknown1;
  char *unknown2;
  char *package_name;
  char *app_version;
};
#define REMOTE__REMOTE_DEVICE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_device_info__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Remote__RemoteConfigure
{
  ProtobufCMessage base;
  int32_t code1;
  Remote__RemoteDeviceInfo *device_info;
};
#define REMOTE__REMOTE_CONFIGURE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_configure__descriptor) \
    , 0, NULL }


struct  Remote__RemoteError
{
  ProtobufCMessage base;
  protobuf_c_boolean value;
  Remote__RemoteMessage *message;
};
#define REMOTE__REMOTE_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_error__descriptor) \
    , 0, NULL }


struct  Remote__RemoteMessage
{
  ProtobufCMessage base;
  Remote__RemoteConfigure *remote_configure;
  Remote__RemoteSetActive *remote_set_active;
  Remote__RemoteError *remote_error;
  Remote__RemotePingRequest *remote_ping_request;
  Remote__RemotePingResponse *remote_ping_response;
  Remote__RemoteKeyInject *remote_key_inject;
  Remote__RemoteImeKeyInject *remote_ime_key_inject;
  Remote__RemoteImeBatchEdit *remote_ime_batch_edit;
  Remote__RemoteImeShowRequest *remote_ime_show_request;
  Remote__RemoteVoiceBegin *remote_voice_begin;
  Remote__RemoteVoicePayload *remote_voice_payload;
  Remote__RemoteVoiceEnd *remote_voice_end;
  Remote__RemoteStart *remote_start;
  Remote__RemoteSetVolumeLevel *remote_set_volume_level;
  Remote__RemoteAdjustVolumeLevel *remote_adjust_volume_level;
  Remote__RemoteSetPreferredAudioDevice *remote_set_preferred_audio_device;
  Remote__RemoteResetPreferredAudioDevice *remote_reset_preferred_audio_device;
  Remote__RemoteAppLinkLaunchRequest *remote_app_link_launch_request;
};
#define REMOTE__REMOTE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&remote__remote_message__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


/* Remote__RemoteAppLinkLaunchRequest methods */
void   remote__remote_app_link_launch_request__init
                     (Remote__RemoteAppLinkLaunchRequest         *message);
size_t remote__remote_app_link_launch_request__get_packed_size
                     (const Remote__RemoteAppLinkLaunchRequest   *message);
size_t remote__remote_app_link_launch_request__pack
                     (const Remote__RemoteAppLinkLaunchRequest   *message,
                      uint8_t             *out);
size_t remote__remote_app_link_launch_request__pack_to_buffer
                     (const Remote__RemoteAppLinkLaunchRequest   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteAppLinkLaunchRequest *
       remote__remote_app_link_launch_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_app_link_launch_request__free_unpacked
                     (Remote__RemoteAppLinkLaunchRequest *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteResetPreferredAudioDevice methods */
void   remote__remote_reset_preferred_audio_device__init
                     (Remote__RemoteResetPreferredAudioDevice         *message);
size_t remote__remote_reset_preferred_audio_device__get_packed_size
                     (const Remote__RemoteResetPreferredAudioDevice   *message);
size_t remote__remote_reset_preferred_audio_device__pack
                     (const Remote__RemoteResetPreferredAudioDevice   *message,
                      uint8_t             *out);
size_t remote__remote_reset_preferred_audio_device__pack_to_buffer
                     (const Remote__RemoteResetPreferredAudioDevice   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteResetPreferredAudioDevice *
       remote__remote_reset_preferred_audio_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_reset_preferred_audio_device__free_unpacked
                     (Remote__RemoteResetPreferredAudioDevice *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteSetPreferredAudioDevice methods */
void   remote__remote_set_preferred_audio_device__init
                     (Remote__RemoteSetPreferredAudioDevice         *message);
size_t remote__remote_set_preferred_audio_device__get_packed_size
                     (const Remote__RemoteSetPreferredAudioDevice   *message);
size_t remote__remote_set_preferred_audio_device__pack
                     (const Remote__RemoteSetPreferredAudioDevice   *message,
                      uint8_t             *out);
size_t remote__remote_set_preferred_audio_device__pack_to_buffer
                     (const Remote__RemoteSetPreferredAudioDevice   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteSetPreferredAudioDevice *
       remote__remote_set_preferred_audio_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_set_preferred_audio_device__free_unpacked
                     (Remote__RemoteSetPreferredAudioDevice *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteAdjustVolumeLevel methods */
void   remote__remote_adjust_volume_level__init
                     (Remote__RemoteAdjustVolumeLevel         *message);
size_t remote__remote_adjust_volume_level__get_packed_size
                     (const Remote__RemoteAdjustVolumeLevel   *message);
size_t remote__remote_adjust_volume_level__pack
                     (const Remote__RemoteAdjustVolumeLevel   *message,
                      uint8_t             *out);
size_t remote__remote_adjust_volume_level__pack_to_buffer
                     (const Remote__RemoteAdjustVolumeLevel   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteAdjustVolumeLevel *
       remote__remote_adjust_volume_level__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_adjust_volume_level__free_unpacked
                     (Remote__RemoteAdjustVolumeLevel *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteSetVolumeLevel methods */
void   remote__remote_set_volume_level__init
                     (Remote__RemoteSetVolumeLevel         *message);
size_t remote__remote_set_volume_level__get_packed_size
                     (const Remote__RemoteSetVolumeLevel   *message);
size_t remote__remote_set_volume_level__pack
                     (const Remote__RemoteSetVolumeLevel   *message,
                      uint8_t             *out);
size_t remote__remote_set_volume_level__pack_to_buffer
                     (const Remote__RemoteSetVolumeLevel   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteSetVolumeLevel *
       remote__remote_set_volume_level__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_set_volume_level__free_unpacked
                     (Remote__RemoteSetVolumeLevel *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteStart methods */
void   remote__remote_start__init
                     (Remote__RemoteStart         *message);
size_t remote__remote_start__get_packed_size
                     (const Remote__RemoteStart   *message);
size_t remote__remote_start__pack
                     (const Remote__RemoteStart   *message,
                      uint8_t             *out);
size_t remote__remote_start__pack_to_buffer
                     (const Remote__RemoteStart   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteStart *
       remote__remote_start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_start__free_unpacked
                     (Remote__RemoteStart *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteVoiceEnd methods */
void   remote__remote_voice_end__init
                     (Remote__RemoteVoiceEnd         *message);
size_t remote__remote_voice_end__get_packed_size
                     (const Remote__RemoteVoiceEnd   *message);
size_t remote__remote_voice_end__pack
                     (const Remote__RemoteVoiceEnd   *message,
                      uint8_t             *out);
size_t remote__remote_voice_end__pack_to_buffer
                     (const Remote__RemoteVoiceEnd   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteVoiceEnd *
       remote__remote_voice_end__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_voice_end__free_unpacked
                     (Remote__RemoteVoiceEnd *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteVoicePayload methods */
void   remote__remote_voice_payload__init
                     (Remote__RemoteVoicePayload         *message);
size_t remote__remote_voice_payload__get_packed_size
                     (const Remote__RemoteVoicePayload   *message);
size_t remote__remote_voice_payload__pack
                     (const Remote__RemoteVoicePayload   *message,
                      uint8_t             *out);
size_t remote__remote_voice_payload__pack_to_buffer
                     (const Remote__RemoteVoicePayload   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteVoicePayload *
       remote__remote_voice_payload__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_voice_payload__free_unpacked
                     (Remote__RemoteVoicePayload *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteVoiceBegin methods */
void   remote__remote_voice_begin__init
                     (Remote__RemoteVoiceBegin         *message);
size_t remote__remote_voice_begin__get_packed_size
                     (const Remote__RemoteVoiceBegin   *message);
size_t remote__remote_voice_begin__pack
                     (const Remote__RemoteVoiceBegin   *message,
                      uint8_t             *out);
size_t remote__remote_voice_begin__pack_to_buffer
                     (const Remote__RemoteVoiceBegin   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteVoiceBegin *
       remote__remote_voice_begin__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_voice_begin__free_unpacked
                     (Remote__RemoteVoiceBegin *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteTextFieldStatus methods */
void   remote__remote_text_field_status__init
                     (Remote__RemoteTextFieldStatus         *message);
size_t remote__remote_text_field_status__get_packed_size
                     (const Remote__RemoteTextFieldStatus   *message);
size_t remote__remote_text_field_status__pack
                     (const Remote__RemoteTextFieldStatus   *message,
                      uint8_t             *out);
size_t remote__remote_text_field_status__pack_to_buffer
                     (const Remote__RemoteTextFieldStatus   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteTextFieldStatus *
       remote__remote_text_field_status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_text_field_status__free_unpacked
                     (Remote__RemoteTextFieldStatus *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteImeShowRequest methods */
void   remote__remote_ime_show_request__init
                     (Remote__RemoteImeShowRequest         *message);
size_t remote__remote_ime_show_request__get_packed_size
                     (const Remote__RemoteImeShowRequest   *message);
size_t remote__remote_ime_show_request__pack
                     (const Remote__RemoteImeShowRequest   *message,
                      uint8_t             *out);
size_t remote__remote_ime_show_request__pack_to_buffer
                     (const Remote__RemoteImeShowRequest   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteImeShowRequest *
       remote__remote_ime_show_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_ime_show_request__free_unpacked
                     (Remote__RemoteImeShowRequest *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteEditInfo methods */
void   remote__remote_edit_info__init
                     (Remote__RemoteEditInfo         *message);
size_t remote__remote_edit_info__get_packed_size
                     (const Remote__RemoteEditInfo   *message);
size_t remote__remote_edit_info__pack
                     (const Remote__RemoteEditInfo   *message,
                      uint8_t             *out);
size_t remote__remote_edit_info__pack_to_buffer
                     (const Remote__RemoteEditInfo   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteEditInfo *
       remote__remote_edit_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_edit_info__free_unpacked
                     (Remote__RemoteEditInfo *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteImeBatchEdit methods */
void   remote__remote_ime_batch_edit__init
                     (Remote__RemoteImeBatchEdit         *message);
size_t remote__remote_ime_batch_edit__get_packed_size
                     (const Remote__RemoteImeBatchEdit   *message);
size_t remote__remote_ime_batch_edit__pack
                     (const Remote__RemoteImeBatchEdit   *message,
                      uint8_t             *out);
size_t remote__remote_ime_batch_edit__pack_to_buffer
                     (const Remote__RemoteImeBatchEdit   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteImeBatchEdit *
       remote__remote_ime_batch_edit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_ime_batch_edit__free_unpacked
                     (Remote__RemoteImeBatchEdit *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteAppInfo methods */
void   remote__remote_app_info__init
                     (Remote__RemoteAppInfo         *message);
size_t remote__remote_app_info__get_packed_size
                     (const Remote__RemoteAppInfo   *message);
size_t remote__remote_app_info__pack
                     (const Remote__RemoteAppInfo   *message,
                      uint8_t             *out);
size_t remote__remote_app_info__pack_to_buffer
                     (const Remote__RemoteAppInfo   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteAppInfo *
       remote__remote_app_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_app_info__free_unpacked
                     (Remote__RemoteAppInfo *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteImeKeyInject methods */
void   remote__remote_ime_key_inject__init
                     (Remote__RemoteImeKeyInject         *message);
size_t remote__remote_ime_key_inject__get_packed_size
                     (const Remote__RemoteImeKeyInject   *message);
size_t remote__remote_ime_key_inject__pack
                     (const Remote__RemoteImeKeyInject   *message,
                      uint8_t             *out);
size_t remote__remote_ime_key_inject__pack_to_buffer
                     (const Remote__RemoteImeKeyInject   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteImeKeyInject *
       remote__remote_ime_key_inject__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_ime_key_inject__free_unpacked
                     (Remote__RemoteImeKeyInject *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteKeyInject methods */
void   remote__remote_key_inject__init
                     (Remote__RemoteKeyInject         *message);
size_t remote__remote_key_inject__get_packed_size
                     (const Remote__RemoteKeyInject   *message);
size_t remote__remote_key_inject__pack
                     (const Remote__RemoteKeyInject   *message,
                      uint8_t             *out);
size_t remote__remote_key_inject__pack_to_buffer
                     (const Remote__RemoteKeyInject   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteKeyInject *
       remote__remote_key_inject__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_key_inject__free_unpacked
                     (Remote__RemoteKeyInject *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemotePingResponse methods */
void   remote__remote_ping_response__init
                     (Remote__RemotePingResponse         *message);
size_t remote__remote_ping_response__get_packed_size
                     (const Remote__RemotePingResponse   *message);
size_t remote__remote_ping_response__pack
                     (const Remote__RemotePingResponse   *message,
                      uint8_t             *out);
size_t remote__remote_ping_response__pack_to_buffer
                     (const Remote__RemotePingResponse   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemotePingResponse *
       remote__remote_ping_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_ping_response__free_unpacked
                     (Remote__RemotePingResponse *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemotePingRequest methods */
void   remote__remote_ping_request__init
                     (Remote__RemotePingRequest         *message);
size_t remote__remote_ping_request__get_packed_size
                     (const Remote__RemotePingRequest   *message);
size_t remote__remote_ping_request__pack
                     (const Remote__RemotePingRequest   *message,
                      uint8_t             *out);
size_t remote__remote_ping_request__pack_to_buffer
                     (const Remote__RemotePingRequest   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemotePingRequest *
       remote__remote_ping_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_ping_request__free_unpacked
                     (Remote__RemotePingRequest *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteSetActive methods */
void   remote__remote_set_active__init
                     (Remote__RemoteSetActive         *message);
size_t remote__remote_set_active__get_packed_size
                     (const Remote__RemoteSetActive   *message);
size_t remote__remote_set_active__pack
                     (const Remote__RemoteSetActive   *message,
                      uint8_t             *out);
size_t remote__remote_set_active__pack_to_buffer
                     (const Remote__RemoteSetActive   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteSetActive *
       remote__remote_set_active__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_set_active__free_unpacked
                     (Remote__RemoteSetActive *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteDeviceInfo methods */
void   remote__remote_device_info__init
                     (Remote__RemoteDeviceInfo         *message);
size_t remote__remote_device_info__get_packed_size
                     (const Remote__RemoteDeviceInfo   *message);
size_t remote__remote_device_info__pack
                     (const Remote__RemoteDeviceInfo   *message,
                      uint8_t             *out);
size_t remote__remote_device_info__pack_to_buffer
                     (const Remote__RemoteDeviceInfo   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteDeviceInfo *
       remote__remote_device_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_device_info__free_unpacked
                     (Remote__RemoteDeviceInfo *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteConfigure methods */
void   remote__remote_configure__init
                     (Remote__RemoteConfigure         *message);
size_t remote__remote_configure__get_packed_size
                     (const Remote__RemoteConfigure   *message);
size_t remote__remote_configure__pack
                     (const Remote__RemoteConfigure   *message,
                      uint8_t             *out);
size_t remote__remote_configure__pack_to_buffer
                     (const Remote__RemoteConfigure   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteConfigure *
       remote__remote_configure__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_configure__free_unpacked
                     (Remote__RemoteConfigure *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteError methods */
void   remote__remote_error__init
                     (Remote__RemoteError         *message);
size_t remote__remote_error__get_packed_size
                     (const Remote__RemoteError   *message);
size_t remote__remote_error__pack
                     (const Remote__RemoteError   *message,
                      uint8_t             *out);
size_t remote__remote_error__pack_to_buffer
                     (const Remote__RemoteError   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteError *
       remote__remote_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_error__free_unpacked
                     (Remote__RemoteError *message,
                      ProtobufCAllocator *allocator);
/* Remote__RemoteMessage methods */
void   remote__remote_message__init
                     (Remote__RemoteMessage         *message);
size_t remote__remote_message__get_packed_size
                     (const Remote__RemoteMessage   *message);
size_t remote__remote_message__pack
                     (const Remote__RemoteMessage   *message,
                      uint8_t             *out);
size_t remote__remote_message__pack_to_buffer
                     (const Remote__RemoteMessage   *message,
                      ProtobufCBuffer     *buffer);
Remote__RemoteMessage *
       remote__remote_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   remote__remote_message__free_unpacked
                     (Remote__RemoteMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Remote__RemoteAppLinkLaunchRequest_Closure)
                 (const Remote__RemoteAppLinkLaunchRequest *message,
                  void *closure_data);
typedef void (*Remote__RemoteResetPreferredAudioDevice_Closure)
                 (const Remote__RemoteResetPreferredAudioDevice *message,
                  void *closure_data);
typedef void (*Remote__RemoteSetPreferredAudioDevice_Closure)
                 (const Remote__RemoteSetPreferredAudioDevice *message,
                  void *closure_data);
typedef void (*Remote__RemoteAdjustVolumeLevel_Closure)
                 (const Remote__RemoteAdjustVolumeLevel *message,
                  void *closure_data);
typedef void (*Remote__RemoteSetVolumeLevel_Closure)
                 (const Remote__RemoteSetVolumeLevel *message,
                  void *closure_data);
typedef void (*Remote__RemoteStart_Closure)
                 (const Remote__RemoteStart *message,
                  void *closure_data);
typedef void (*Remote__RemoteVoiceEnd_Closure)
                 (const Remote__RemoteVoiceEnd *message,
                  void *closure_data);
typedef void (*Remote__RemoteVoicePayload_Closure)
                 (const Remote__RemoteVoicePayload *message,
                  void *closure_data);
typedef void (*Remote__RemoteVoiceBegin_Closure)
                 (const Remote__RemoteVoiceBegin *message,
                  void *closure_data);
typedef void (*Remote__RemoteTextFieldStatus_Closure)
                 (const Remote__RemoteTextFieldStatus *message,
                  void *closure_data);
typedef void (*Remote__RemoteImeShowRequest_Closure)
                 (const Remote__RemoteImeShowRequest *message,
                  void *closure_data);
typedef void (*Remote__RemoteEditInfo_Closure)
                 (const Remote__RemoteEditInfo *message,
                  void *closure_data);
typedef void (*Remote__RemoteImeBatchEdit_Closure)
                 (const Remote__RemoteImeBatchEdit *message,
                  void *closure_data);
typedef void (*Remote__RemoteAppInfo_Closure)
                 (const Remote__RemoteAppInfo *message,
                  void *closure_data);
typedef void (*Remote__RemoteImeKeyInject_Closure)
                 (const Remote__RemoteImeKeyInject *message,
                  void *closure_data);
typedef void (*Remote__RemoteKeyInject_Closure)
                 (const Remote__RemoteKeyInject *message,
                  void *closure_data);
typedef void (*Remote__RemotePingResponse_Closure)
                 (const Remote__RemotePingResponse *message,
                  void *closure_data);
typedef void (*Remote__RemotePingRequest_Closure)
                 (const Remote__RemotePingRequest *message,
                  void *closure_data);
typedef void (*Remote__RemoteSetActive_Closure)
                 (const Remote__RemoteSetActive *message,
                  void *closure_data);
typedef void (*Remote__RemoteDeviceInfo_Closure)
                 (const Remote__RemoteDeviceInfo *message,
                  void *closure_data);
typedef void (*Remote__RemoteConfigure_Closure)
                 (const Remote__RemoteConfigure *message,
                  void *closure_data);
typedef void (*Remote__RemoteError_Closure)
                 (const Remote__RemoteError *message,
                  void *closure_data);
typedef void (*Remote__RemoteMessage_Closure)
                 (const Remote__RemoteMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    remote__remote_key_code__descriptor;
extern const ProtobufCEnumDescriptor    remote__remote_direction__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_app_link_launch_request__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_reset_preferred_audio_device__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_set_preferred_audio_device__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_adjust_volume_level__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_set_volume_level__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_start__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_voice_end__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_voice_payload__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_voice_begin__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_text_field_status__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_ime_show_request__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_edit_info__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_ime_batch_edit__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_app_info__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_ime_key_inject__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_key_inject__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_ping_response__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_ping_request__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_set_active__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_device_info__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_configure__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_error__descriptor;
extern const ProtobufCMessageDescriptor remote__remote_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_remotemessage_2eproto__INCLUDED */
